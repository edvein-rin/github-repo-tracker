services:
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    user: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_POST: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      PGUSER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: ${SERVER_PORT}
      MODE: ${SERVER_MODE}
      RUN_MIGRATIONS: ${SERVER_RUN_MIGRATIONS}
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server/src:/app/src
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - ${PG_ADMIN_PORT}:80
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  postgres:
