services:
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    user: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 10
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - ${PG_ADMIN_PORT}:80
    depends_on:
      postgres:
        condition: service_healthy
  server:
    build:
      context: ./server
      dockerfile: ./Dockerfile.${MODE:-production}
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PORT: ${SERVER_PORT}
      MODE: ${MODE}
      JWT_SECRET: ${SERVER_JWT_SECRET}
      JWT_EXPIRATION_TIME: ${SERVER_JWT_EXPIRATION_TIME}
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      watch:
        - path: ./server/package.json
          action: rebuild
    volumes:
      - ./server/src:/app/src
  client:
    build:
      context: ./client
      dockerfile: ./Dockerfile.${MODE:-production}
    environment:
      NEXT_PUBLIC_SERVER_URL: server:${SERVER_PORT}
      PORT: ${CLIENT_PORT}
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    develop:
      watch:
        - path: ./client/package.json
          action: rebuild
    volumes:
      - ./client/src:/app/src
volumes:
  postgres:
